import{aY as j,S as D,m as h,j as f,k as y,t as S,s as z,I as L,p as k,d as C,aZ as w,q as F,a_ as B,a$ as E,g as P}from"./BBnRYWwF.js";import{s as V}from"./Zi5LXOru.js";const $="Indicator",A=P($,"indicator-g"),b=P($,"triangle-g"),T=P($,"line-g"),I=P($,"needle-g"),G=P($,"pin-g"),_={name:$,defaultParams:L,layerIndex:k,validator:(d,{validateColumns:t})=>t(d,{startAngle:{toBeTypes:["number"]},endAngle:{toBeTypes:["number"]},radius:{toBeTypes:["number"]},indicatorType:{toBe:'"line" | "needle" | "pin" | "triangle"',test:s=>["line","needle","pin","triangle"].includes(s)},size:{toBeTypes:["number"]},colorType:{toBeOption:"ColorType"},value:{toBeTypes:["number"]}})};function v({containerSelection:d,angle:t,datum:r,value:s,computedData:m,SeriesDataMap:u,fullParams:l,fullChartParams:a,event$:p}){const o=d.selectAll(`g.${A}`).data([t]).join(n=>n.append("g").attr("class",A).attr("transform",`rotate(${l.startAngle/Math.PI*180})`),n=>n,n=>n.remove()),e=o.transition().duration(a.transitionDuration).attr("transform",`rotate(${t})`),i=u.get(r.seriesLabel);return e.tween("move",(n,g)=>c=>{p.next({type:"series",pluginName:$,eventName:"transitionMove",event:void 0,highlightTarget:a.highlightTarget,datum:r,series:i,seriesIndex:r.seriesIndex,seriesLabel:r.seriesLabel,data:m,mark:s,tween:c})}).on("end",(n,g)=>{p.next({type:"series",pluginName:$,eventName:"transitionEnd",event:void 0,highlightTarget:a.highlightTarget,datum:r,series:i,seriesIndex:r.seriesIndex,seriesLabel:r.seriesLabel,data:m,mark:s})}),o}function M({containerSelection:d,angle:t,value:r,datum:s,computedData:m,SeriesDataMap:u,pointerDistance:l,fullParams:a,fullChartParams:p,graphicColor:o,event$:e}){v({containerSelection:d,angle:t,value:r,datum:s,computedData:m,SeriesDataMap:u,fullParams:a,fullChartParams:p,event$:e}).selectAll(`g.${b}`).data([l]).join("g").attr("class",b).attr("transform",`translate(0, -${l})`).selectAll("path").data([a.size]).join("path").attr("d",B().type(E).size(n=>Math.sqrt(3)/4*Math.pow(a.size,2))).attr("fill",o)}function O({containerSelection:d,angle:t,value:r,datum:s,computedData:m,SeriesDataMap:u,pointerDistance:l,fullParams:a,fullChartParams:p,graphicColor:o,event$:e}){v({containerSelection:d,angle:t,value:r,datum:s,computedData:m,SeriesDataMap:u,fullParams:a,fullChartParams:p,event$:e}).selectAll(`g.${T}`).data([l]).join("g").attr("class",T).selectAll("rect").data([a.size]).join("rect").attr("x",-a.size/2).attr("y",-l).attr("width",a.size).attr("height",l).attr("fill",o)}function R({containerSelection:d,angle:t,value:r,datum:s,computedData:m,SeriesDataMap:u,pointerDistance:l,fullParams:a,fullChartParams:p,graphicColor:o,event$:e}){v({containerSelection:d,angle:t,value:r,datum:s,computedData:m,SeriesDataMap:u,fullParams:a,fullChartParams:p,event$:e}).selectAll(`g.${I}`).data([l]).join("g").attr("class",I).selectAll("path").data([a.size]).join("path").attr("d",()=>{const n=a.size;return`M${[[0,-l],[n/2,0],[0,n/2],[-n/2,0]].map(c=>c.join(",")).join("L")}Z`}).attr("fill",o)}function q({containerSelection:d,angle:t,value:r,datum:s,computedData:m,SeriesDataMap:u,pointerDistance:l,fullParams:a,fullChartParams:p,graphicColor:o,event$:e}){const n=v({containerSelection:d,angle:t,value:r,datum:s,computedData:m,SeriesDataMap:u,fullParams:a,fullChartParams:p,event$:e}).selectAll(`g.${G}`).data([l]).join("g").attr("class",G);n.selectAll("line.pin-shaft").data([1]).join("line").attr("class","pin-shaft").attr("x1",0).attr("y1",0).attr("x2",0).attr("y2",-l).attr("stroke",o).attr("stroke-width",Math.min(a.size*.2,2)).attr("stroke-linecap","round"),n.selectAll("circle.pin-head").data([a.size]).join("circle").attr("class","pin-head").attr("cx",0).attr("cy",0).attr("r",a.size/2).attr("fill",o)}function U(d,t){const r=new D;t.containerSelection.selectAll("g").remove();const s=t.containerVisibleComputedSortedData$.pipe(h(e=>e.reduce((i,n)=>i+(n.value??0),0)),C()),m=f({fullParams:t.fullParams$,containerValueSum:s}).pipe(y(async e=>e),h(({fullParams:e,containerValueSum:i})=>w().domain([0,i]).range([e.startAngle/Math.PI*180,e.endAngle/Math.PI*180]))),u=t.fullParams$.pipe(h(e=>e.value),C()),l=f({value:u,valueToAngleScale:m,containerValueSum:s}).pipe(y(async e=>e),h(({value:e,valueToAngleScale:i,containerValueSum:n})=>{const g=Math.max(Math.min(e,n),0);return i(g)}),C()),a=f({fullParams:t.fullParams$,seriesContainerPosition:t.seriesContainerPosition$}).pipe(y(async e=>e),h(({fullParams:e,seriesContainerPosition:i})=>{const{radius:n}=e,{width:g,height:c}=i;return Math.min(g,c)*n/2}),C()),p=f({value:u,containerVisibleComputedSortedData:t.containerVisibleComputedSortedData$}).pipe(y(async e=>e),h(({value:e,containerVisibleComputedSortedData:i})=>{let n=null,g=0;for(let c=0;c<i.length;c++){const N=i[c].value??0;if(g+=N,g>=e){n=i[c];break}c===i.length-1&&(n=i[c])}return n}),C()),o=f({value:u,valueSeriesIndex:p.pipe(h(e=>e?e.seriesIndex:0)),fullParams:t.fullParams$,fullChartParams:t.fullChartParams$}).pipe(y(async e=>e),h(e=>{const n={color:e.fullParams.colorType==="label"?e.fullChartParams.colors[e.fullChartParams.colorScheme].label[e.valueSeriesIndex]:"",seriesIndex:0,seriesLabel:"",seq:0};return F({datum:n,colorType:e.fullParams.colorType,fullChartParams:e.fullChartParams})}),C());return t.fullChartParams$.pipe(S(r)).subscribe(e=>{}),f({fullParams:t.fullParams$,fullChartParams:t.fullChartParams$,angle:l,pointerDistance:a,graphicColor:o,value:u,datum:p,computedData:t.computedData$,SeriesDataMap:t.SeriesDataMap$}).subscribe(e=>{t.renderFn({containerSelection:t.containerSelection,angle:e.angle,value:e.fullParams.value,datum:e.datum,computedData:e.computedData,SeriesDataMap:e.SeriesDataMap,pointerDistance:e.pointerDistance,fullParams:e.fullParams,fullChartParams:e.fullChartParams,graphicColor:e.graphicColor,event$:t.event$})}),()=>{r.next(void 0)}}const H=j(_)(({selection:d,observer:t,subject:r})=>{r.plugins$.subscribe(a=>{console.log("Indicator params",a)});const s=new D,{seriesCenterSelection$:m}=V({selection:d,pluginName:$,visibleComputedSortedData$:t.visibleComputedSortedData$,seriesContainerPosition$:t.seriesContainerPosition$}),u=[],l=t.fullParams$.pipe(h(a=>a.indicatorType==="triangle"?M:a.indicatorType==="line"?O:a.indicatorType==="needle"?R:a.indicatorType==="pin"?q:M));return f({seriesCenterSelection:m,renderFn:l}).pipe(y(async a=>a),S(s)).subscribe(a=>{u.forEach(p=>p()),a.seriesCenterSelection.each((p,o,e)=>{const i=z(e[o]),n=t.visibleComputedSortedData$.pipe(S(s),h(c=>c[o]??c[0])),g=t.seriesContainerPosition$.pipe(S(s),h(c=>c[o]??c[0]));u[o]=U($,{containerSelection:i,renderFn:a.renderFn,containerVisibleComputedSortedData$:n,fullParams$:t.fullParams$,fullChartParams$:t.fullChartParams$,seriesContainerPosition$:g,computedData$:t.computedData$,SeriesDataMap$:t.SeriesDataMap$,subject:r,event$:r.event$})})}),()=>{s.next(void 0)}});export{H as I};
